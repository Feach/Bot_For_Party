# –ü–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è —é–∑–µ—Ä–∞. –° –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º –≤—Å–µ–π –∏–Ω—Ñ—ã –æ –Ω–µ–º.
from data_base import json_parse_users

from import_buffer import dp

from keyboards.client_keyboards import ikb_profile, ikb_start

from config import PARSE_USER_LIST_URL


@dp.callback_query_handler(lambda query: query.data == "ibtn_profile")
async def profile(message):
    data = json_parse_users.get_json(url=PARSE_USER_LIST_URL)
    is_user_found = False
    my_item = ""
    for item in data:
        if str(item.get('user_id')) == "@"+str(message.from_user.username):
            is_user_found = True
            my_item = item
    if is_user_found:
        await message.bot.send_message(message.from_user.id, '<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>')

        cart = f"{'<b>–ò–º—è: </b>'} {my_item.get('name')}\n" \
               f"{'<b>–ü–æ–ª: </b>'} {my_item.get('gender')}\n" \
               f"{'<b>–í–æ–∑—Ä–∞—Å—Ç: </b>'} {my_item.get('age')}\n" \
               f"{'<b>–û–ø–∏—Å–∞–Ω–∏–µ: </b>'} {my_item.get('discription')}\n" \
               f"{'<b>ID: </b>'} {my_item.get('user_id')}\n"
        await message.bot.send_message(message.from_user.id, cart, reply_markup=ikb_profile)
    else:
        await message.bot.send_message(message.from_user.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è. \n–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É üëá', reply_markup=ikb_start)
